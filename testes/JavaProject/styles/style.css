body{
    background-color: rgb(180, 180, 180);
}

ul > li:nth-of-type(1):hover{
    font-weight: bold;
    color: red;
}

ul > li:nth-child(3){
    color: rgb(17, 0, 255);
}

ul li:nth-child(even){
    background-color: aqua;
}
ul li:nth-child(odd){
    background-color: rgb(60, 255, 0);
}

li::before{
    content: "telefone: ";

}

p::first-line{
    font-weight: bold;
}

p::first-letter{
    color: blue;
}

.esq{
    float: left;
}

.dir{
    float: right;
}
.dir + div{
    clear:both;
}

.flexbox{
    display: flex;
}
.item:nth-child(1){ /* coloca a div "A" na order 1 enquanto os outros elementos continuam na order 0 */
    order: 1;
}

.container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    border: 1px dotted;
    gap: 10px; /* coloca um espaço de 10px entre um elemento e outro tipo margin mas nao fica flexivel*/

}
.container div{
    width: 200px;
    border: 1px solid red;

}
.container2 {
    display: flex;
    justify-content: flex-start;
    border: 1px dotted;
    height: 50px;

    
}
.container2 div{
    border: 1px solid red;

}

.container2 div:nth-child(1){
    flex-grow: 2; /* vai ocupar 1/x da quantidade de espaço vazio, onde x é a quantidade de flex grow (frações) */
}

.container2 div:nth-child(2),
.container2 div:nth-child(3){
    flex-grow: 1; /* nesse caso A vai ocupar 2/3 do espaço vazios. B e C ocupam 1/3 cada */
}

.container3 {
    display: flex;
    justify-content: flex-start;
    border: 1px dotted;
    height: 50px;
    width: 200px;

    
}
.container3 div{
    border: 1px solid red;
    flex-basis: 80px;

}


.container3 div:nth-child(2),
.container3 div:nth-child(3){
    flex-shrink: 
    3; /* Vai se encolher para dar mais espaço a outros conteudos quanto maior o valor  mais encolhido se for menor que 0 ele vai aumentar
    Shorthand -> flex: {flex-grow} {flex-shrink} {flex-basis}
    */

}